// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ICognitoService is an autogenerated mock type for the ICognitoService type
type ICognitoService struct {
	mock.Mock
}

// AuthenticateUser provides a mock function with given fields: username, password
func (_m *ICognitoService) AuthenticateUser(username string, password string) (string, error) {
	ret := _m.Called(username, password)

	if len(ret) == 0 {
		panic("no return value specified for AuthenticateUser")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (string, error)); ok {
		return rf(username, password)
	}
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(username, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(username, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CognitoConfirmUser provides a mock function with given fields: username, confirmationCode
func (_m *ICognitoService) CognitoConfirmUser(username string, confirmationCode string) error {
	ret := _m.Called(username, confirmationCode)

	if len(ret) == 0 {
		panic("no return value specified for CognitoConfirmUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(username, confirmationCode)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CognitoRegisterUser provides a mock function with given fields: username, password
func (_m *ICognitoService) CognitoRegisterUser(username string, password string) error {
	ret := _m.Called(username, password)

	if len(ret) == 0 {
		panic("no return value specified for CognitoRegisterUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(username, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewICognitoService creates a new instance of ICognitoService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICognitoService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICognitoService {
	mock := &ICognitoService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
